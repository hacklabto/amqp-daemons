#!/usr/bin/ruby

# Door Message Temperature Adjuster
#  Notifies the thermostat system that the lab is occupied when someone enters.
# Input: Exchange 'door.entry'
# Output: Thermostat adjustment via BAYweb API

require 'rubygems'
require 'amqp'
require 'net/http'
require 'json'
require 'inifile'

cfg = IniFile.load(File.expand_path("~/.labamqprc"))
amqp_host = cfg['broker']['BrokerHost']
amqp_user = cfg['doormsg_temp_adjuster']['BrokerUsername']
amqp_pass = cfg['doormsg_temp_adjuster']['BrokerPassword']
api_id = cfg['doormsg_temp_adjuster']['APIID']
api_key = cfg['doormsg_temp_adjuster']['APIKey']

AMQP.logging = true
AMQP.start(:host => amqp_host, :user => amqp_user, :pass => amqp_pass) do
  amq = AMQP::Channel.new
  door_exchange = amq.fanout('door.entry', :durable => false, :auto_delete => false);
  door_queue = amq.queue('door.entry.thermostat', :durable => false, :auto_delete => true);
  door_queue.bind(door_exchange);
  door_queue.subscribe do |header, msg|
    json = JSON.load(msg)
    if(json['allowed']) then
      puts "Someone came in, notifying BAYweb that the lab is occupied."
      request = Net::HTTP::Get.new("/v2/?key=#{api_key}&id=#{api_id}&action=set&act=0")
      http = Net::HTTP.new("api.bayweb.com", 80)
      http.start { |http| http.request(request) }
    end
  end
end
